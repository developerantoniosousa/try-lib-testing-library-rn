// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TodoList should render component with the defaultTodos passed as a prop to element correctly 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <TextInput
          allowFontScaling={true}
          rejectResponderTermination={true}
          testID="input-add-todo"
          underlineColorAndroid="transparent"
          value=""
        />
        <Button
          testID="button-add-todo"
          title="Add"
        />
        <View
          testID="todo-list"
        >
          <Text
            testID="todo-item"
          >
            do my homework
          </Text>
          <Text
            testID="todo-item"
          >
            make the bed
          </Text>
        </View>
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <TextInput
        allowFontScaling={true}
        rejectResponderTermination={true}
        testID="input-add-todo"
        underlineColorAndroid="transparent"
        value=""
      />
      <Button
        testID="button-add-todo"
        title="Add"
      />
      <View
        testID="todo-list"
      >
        <Text
          testID="todo-item"
        >
          do my homework
        </Text>
        <Text
          testID="todo-item"
        >
          make the bed
        </Text>
      </View>
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;

exports[`TodoList should render corretly without pass any prop to element 1`] = `
Object {
  "asJSON": [Function],
  "baseElement": <View
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View
      collapsable={true}
      pointerEvents="box-none"
      style={
        Object {
          "flex": 1,
        }
      }
    >
      <View>
        <TextInput
          allowFontScaling={true}
          rejectResponderTermination={true}
          testID="input-add-todo"
          underlineColorAndroid="transparent"
          value=""
        />
        <Button
          testID="button-add-todo"
          title="Add"
        />
        <View
          testID="todo-list"
        />
      </View>
    </View>
  </View>,
  "container": <View
    collapsable={true}
    pointerEvents="box-none"
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <View>
      <TextInput
        allowFontScaling={true}
        rejectResponderTermination={true}
        testID="input-add-todo"
        underlineColorAndroid="transparent"
        value=""
      />
      <Button
        testID="button-add-todo"
        title="Add"
      />
      <View
        testID="todo-list"
      />
    </View>
  </View>,
  "debug": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByHintText": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByDisplayValue": [Function],
  "findByHintText": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByHintText": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByDisplayValue": [Function],
  "getByHintText": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByHintText": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByDisplayValue": [Function],
  "queryByHintText": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "unmount": [Function],
}
`;
